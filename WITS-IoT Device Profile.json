{
  "comment":  "Comments are added to this to aid understanding and are not necessary",
  "wits": 1,
  "name": "ACME.RTUOne.1.23",
  "mnfr": "ACME Ltd",
  "prdt": "RTU One DeLuxe",
  "pVer": "1.23",
  "canCoreUp": false,
  "canCoreDown": true,
  "canConfigDown": true,
  "supportCompression": [ "GZIP" ],
  "profile": {
    "comment": "The profile contains the device capability section. While the Object Types have fields which determine the quantities of those objects, it is common practice for devices to have ranges of object numbers. This section gives the ranges of numbers available, subject to the limits defined in the Object Types.",
    "capability": {
      "points": {
        "comment": "By point type",
        "ai": [
          {
            "comment": "A range is an inclusive set of integers. There can be more than one range. Multiple ranges may be used, e.g. for Physical, Virtual or External points.",
            "from": 1,
            "to": 2
          },
          {
            "from": 100,
            "to": 110
          }
        ],
        "bi": [
          {
            "from": 1,
            "to": 9
          }
        ],
        "ao": [
          {
            "from": 1,
            "to": 9
          }
        ],
        "bo": [
          {
            "comment": "Binary Output points (maintained or pulsed – see later for feature specification)",
            "from": 1,
            "to": 9
          }
        ],
        "c": [
          {
            "comment": "Counter Points (these points may be exclusive to binary inputs on their point numbers, .i.e. a binary input may or may not use the same number as a counter – see later for feature specification)",
            "from": 1,
            "to": 2
          }
        ],
        "mi": [
          {
            "comment": "MIME points. These can be input or output. Application examples include text strings, images or JSON content. The MIME type is a field in the Device Profile.",
            "from": 1,
            "to": 1
          }
        ],
        "mo": [
          {
            "from": 1,
            "to": 2
          }
        ]
      },
      "pointSupport": {
        "comment": "Multi bit binary input and output support is optionally described. Include di2, di3, do2, do3 if supported, and state whether bit numbers need to be consecutively used in the Incremental Configuration. If a type is absent from this list, they are unsupported.",
        "multiBit": [
          { "di2": "consecutive" },
          { "do2": "nonConsecutive" },
          { "di3": "nonConsecutive" }
        ],
        "comment2":  "Counters use input numbers exclusively.",
        "counterExclusive": true
      },
      "channels": [
        {
          "comment": "This section lists the channel numbers available . These are index numbers of the individual communications paths back to the broker.",
          "from": 1,
          "to": 2
        }
      ],
      "comment2": "Only those commands supported by this device.",
      "commands": [
        "getdata",
        "setclock",
        "control",
        "override",
        "getdeviceinfo"
      ]
    },

    "objectTypes": {
      "device": {
        "displayName": {
          "en-US": "WITS Device"
        },
        "minObjects": 1,
        "maxObjects": 1,
        "totalObjects": 1,

        "configFields": {
          "nid": {
            "type": "string",
            "displayName": "Node Id",
            "description": "The unique Id applying to the field application. Remains the same when replacing a device.",
            "maxLength": 64
          },
          "loc": {
            "displayName": "Location",
            "description": "Site address.",
            "type": "string",
            "maxLength": 100
          },
          "ownr": {
            "displayName": "Owner",
            "type": "string",
            "maxLength": 50
          },
          "asst": {
            "displayName": "Asset",
            "type": "string",
            "description": "Owners asset code.",
            "maxLength": 50
          },
          "name": {
            "displayName": "Name",
            "type": "string",
            "description": "Name as used by the Master Station.",
            "maxLength": 50
          },
          "serl": {
            "displayName": "Serial Number",
            "type": "string",
            "maxLength": 50
          },
          "location": {
            "displayName": "Has a location",
            "description": "Enable to enter WGS84 co-ordinates.",
            "type": "boolean"
          },
          "latitude": {
            "comment":  "There is a json schema type for this, so consider replacing.",
            "displayName": "Latitude",
            "description": "In degrees (WGS84).",
            "type": "number",
            "max": 90,
            "min": -90,
            "enable": "location=true"
          },
          "longitude": {
            "displayName": "Longitude",
            "description": "In degrees (WGS84).",
            "type": "number",
            "max": "180",
            "min": "-180",
            "enable": "location=true"
          },
          "scan": {
            "displayName": "On Scan",
            "description": "Device on/off scan (started/stopped).",
            "type": "boolean"
          }

        },

        "pages": [
          {
            "title": "Device",
            "comment": "NO PROGRESS MADE HERE - OR FOR OTHER TYPES"
          }
        ]
      },

      "channel": {
        "comment": "One or more connection objects.  Note that the channels are listed in priority order, if applicable, from highest first. Typically a device could have multiple channels with different capabilities, in which case each channel adds the fields needed as appropriate.",
        "displayName": {
          "en-US": "WITS Channel"
        },
        "parentTypes": [ "device" ],
        "minObjects": 1,
        "maxObjects": 1,
        "totalObjects": 1,

        "configFields": {
          "num": {
            "displayName": "Channel Number",
            "description": "Channel index number.",
            "type": "integer",
            "minimum": 1,
            "maximum": 65535
          },
          "name": {
            "displayName": "Channel Name",
            "description": "Channel name.",
            "type": "string",
            "maxLength": 100
          },
          "mode": {
            "displayName": "Connection Mode",
            "description": "Unused, Permanent or On-Demand.",
            "type": "number",
            "enum": [ "Unused", "Permanent", "On Demand" ],
            "comment":  "If enum values are not 0,1,2 etc, then we add: 'enumValues': [2,4,6]"
          },
          "prot": {
            "displayName": "Network Protocol",
            "description": "Defines the type of networking supported",
            "type": "enum",
            "values": [
              "none",
              "IPv4(TCP)",
              "IPv4(UDP)",
              "IPv6(TCP)",
              "IPv6(UDP)"
            ]
          },
          "type": {
            "displayName": "Network type",
            "description": "Network endpoint type",
            "type": "enum",
            "values": [ "listening", "initiating", "both" ]
          },
          "net": {
            "comment":  "Is there a json schema for an address?",
            "displayName": "Network Address",
            "description": "Network information containing the IPv4 or IPv6 DNS name or IP address plus : port number (default 20000 if omitted).",
            "type": "string",
            "maxLength": 64
          },


          "start": {
            "comment": "Defines the time and schedule that a field device must follow to connect to the Master Station.",
            "displayName": "Start",
            "description": "Time of the first scheduled connection from start of day, in minutes.",
            "type": "integer",
            "minimum": 0,
            "maximum": 1439
          },
          "repeat": {
            "displayName": "Repeat",
            "description": "Repeat interval (minutes).",
            "type": "integer",
            "minimum": 1,
            "max": 720
          }
        }
      },

      "deviceLink": {
        "comment": "One or more objects. All points 'connect' to a Device Link. How to specify which device links and types/quantities are available?",
        "displayName": {
          "en-US": "WITS Device Link"
        },
        "parentTypes": [ "device" ],
        "minObjects": 1,
        "maxObjects": 1,

        "configFields": {
          "num": {
            "displayName": "Device Link Number",
            "description": "Device Link index number.",
            "type": "integer",
            "minimum": 1,
            "maximum": 65535
          },
          "name": {
            "displayName": "Device Link Name",
            "description": "Device Link name.",
            "type": "string",
            "maxLength": 100
          }
        }
      },

      "point": {
        "displayName": {
          "en-US": "WITS Point"
        },
        "parentTypes": [ "deviceLink" ],
        "minObjects": 0,
        "maxObjects": 100,
        "totalObjects": 100,

        "configFields": {

          "parent": {
            "displayName": "Device Link",
            "description": "Reference to the Device Link for this point.",
            "type": "integer"
          },

          "num": {
            "displayName": "Point Number",
            "description": " Point number (1-based with allowable numbers defined in the capability/points/addresses.).",
            "type": "integer",
            "minimum": 1,
            "maximum": 65535
          },

          "type": {
            "displayName": "Point Type",
            "description": "Type of the point. Must be a valid WITS-IoT point type (ai, bi{2/3}, ao, bo{2/3}, ct, mi, mo).",
            "type": "string",
            "enum": [
              "ai",
              "bi",
              "bi2",
              "bi3",
              "ao",
              "bo",
              "bo2",
              "bo3",
              "ct",
              "mi",
              "mo"
            ],
            "comment": "A device may not support all of these items, as indicated in the point capability address ranges."
          },

          "name": {
            "displayName": "Point Name",
            "description": "The name is optional, and is a string which can be used by the device to report data values or to display locally. Furthermore the name string may contain a hierarchy of fields with a separator which can imply a structure.",
            "type": "string",
            "maxLength": 64
          },

          "class": {
            "displayName": "Point Class",
            "description": "The class is optional, and is a string which can be used by the Master to denote equipment or asset ontology.",
            "type": "string",
            "maxLength": 64
          },

          "scan": {
            "displayName": "Point On-Scan",
            "description": "On-scan is set to True if the point is active (or needs to be made active).",
            "type": "boolean"
          },

          "overrideMin": {
            "displayName": "Override Minimum",
            "description": "Minimum value of override permitted.",
            "type": "boolean"
          },

          "overrideMax": {
            "displayName": "Override Maximum",
            "description": "Maximum value of override permitted.",
            "type": "boolean"
          },

          "rate": {
            "displayName": "Log Rate",
            "description": "Base periodic logging rate (0=no logging). In seconds.",
            "type": "integer"
          },

          "offset": {
            "displayName": "Log Offset",
            "description": "Offset time from the start of the week that the log is synchronised from (Monday, 00:00:00). Measured in seconds.  If 0, then log is offset from the last midnight.",
            "type": "integer"
          },

          "comment": "Actions to be taken when a points status changes (enabled or disabled).  The status types are listed.  For each status the actions may be: 0=do nothing, 1=log event, 2=generate event and call Master Station. All Actions are optional, unused actions can be ignored or not inserted into the object.",

          "whenOnline": {
            "displayName": "",
            "description": "ONLINE flag is set when the point is on-scan and active..",
            "type": "number"
          },
          "whenRestart": {
            "displayName": "",
            "description": "RESTART flag is set when the point has been reconfigured or the field device or point have come ON-SCAN. This flag remains set until the first value has been recorded by the field device.",
            "type": "number"
          },
          "whenCommsLost": {
            "displayName": "",
            "description": "The commslost (or COMM_LOST) flag indicates that communications with the Master Station have been lost.",
            "type": "number"
          },
          "whenRemForce": {
            "displayName": "",
            "description": "The remforce (REMOTE_FORCED) flag indicates that the value of the point has been forced to a value by a Master Station.",
            "type": "number"
          },
          "whenLocForce": {
            "displayName": "",
            "description": "The locforced (LOCAL_FORCED) flag indicates that the value of the point has been forced to a value by the device (test state, for example) or by human interaction.",
            "type": "number"
          },
          "whenChatter": {
            "displayName": "",
            "description": "The chatter (CHATTER_FILTER) flag indicates that a binary or double-bit binary point is changing value often enough to trigger a chatter filter.",
            "type": "number"
          },
          "whenOverrange": {
            "displayName": "",
            "description": "The overrange (OVER_RANGE) flag indicates that the point’s true value exceeds the defined range that the point supports (analogue inputs only).",
            "type": "number"
          },
          "whenDiscontinuity": {
            "displayName": "",
            "description": "The discontinuity flag indicates that the reported value cannot be compared against previous values for calculating count difference (e.g. rate of change calculation).",
            "type": "number"
          },
          "whenReferrer": {
            "displayName": "",
            "description": "The Reference Error flag indicates that the measurement process has determined that the object’s data value may not have the expected level of accuracy. For example, the reference signal used in the analogue-to-digital conversion process is out of limits, or a calculated value has been contaminated with noise (analogue inputs only).",
            "type": "number"
          }
        }
      },

      "ai": {
        "displayName": {
          "en-US": "WITS Analogue Point"
        },
        "parentTypes": [ "point" ],
        "minObjects": 0,
        "maxObjects": 50,
        "totalObjects": 50,

        "configFields": {

          "parent": {
            "displayName": "Parent Point",
            "description": "Analogue features belong to analogue parent points only.",
            "type": "integer"
          },
          "type": {
            "displayName": "",
            "description": "The scale object sets the point value scaling information. Raw data type for the raw instrument (0=integer, 1=Unsigned integer, 2=single precision floating point).",
            "type": ""
          },
          
          "rawsc1": {
            "displayName": "",
            "description": "Raw Scale 1  is the first raw value of the point (e.g. lower or zero value for the instrument).",
            "type": ""
          },
          
          "rawsc2": {
            "displayName": "",
            "description": "Raw scale 2 is the second raw value for the scaling (e.g. higher or full scale value of the instrument).",
            "type": ""
          },
          
          "engsc1": {
            "displayName": "",
            "description": "Engineering Scale 1 ; this is the first engineering value that corresponds to the first raw value (e.g. smallest scaled output that can be reported.",
            "type": ""
          },
          
          "engsc2": {
            "displayName": "",
            "description": "Engineering scale 2; this is the second engineering value that corresponds to the second raw value (e.g. the highest scaled value that can be recorded).",
            "type": ""
          },
          
          "min": {
            "displayName": "",
            "description": "The measurement range’s minimum value, in engineering units. If a value is below the minimum, then it is under-range. The OVER_RANGE flag must be set when reporting values that are under-range. Under-range values should not be used when determining significant data (dead-band) changes.",
            "type": ""
          },
          
          "max": {
            "displayName": "",
            "description": "The measurement range’s maximum value, in engineering units. If a value is above the maximum, then it is over-range. The OVER_RANGE flag must be set when reporting values that are over-range. Over-range values should not be used when determining significant data (dead-band) changes.",
            "type": ""
          },
          
          "units": {
            "displayName": "",
            "description": "The units are a free format ASCII string that can be used when displaying the point value through local access displays etc. The Field Device should not interpret any meaning from this string and may choose to ignore it completely.",
            "type": ""
          },

          "sigChangeValue": {
            "displayName": "",
            "description": "This configuration record defines parameters that are used by a Field Device to take an action when an analogue point changes by a significant amount.",
            "type": "number"
          }
        }
      },

      "analogueLimit": {
        "displayName": {
          "en-US": "WITS Analogue Point Limit"
        },
        "parentTypes": [ "analogue", "counter" ],
        "minObjects": 4, 
		"comment": "e.g. this device has a mandatory four limits per analogue",
        "maxObjects": 4,
        "totalObjects": 200,

        "configFields": {
          
          "parent": {
            "displayName": "",
            "description": "Analogue limits belong to analogue parent points only.",
            "type": "integer"
          },

          "parentType": {
            "displayName": "Point Type",
            "description": "Type of the point. Must be a valid WITS-IoT point type suitable for limits (ai, ao, c).",
            "type": "string",
            "enum": [
              "ai",
              "ao",
              "c"
            ]
          },

          "num": {
			"comment": "Limit Index; limit objects must use consecutive limit indexes starting at 1.  The lowest index value must correspond to the lowest limit and the maximum index to the highest limit. See limitCount in PointSupport for supported maximum.",
            "displayName": "Limit Number",
            "description": " Limit number (1-based with allowable numbers defined in the capability/points/addresses.).",
            "type": "integer",
            "minimum": 1,
            "maximum": 65535
          },

          
          "action": {
            "displayName": "",
            "description": "Action to be taken on transgressing the limit  (0=do nothing, 1=log event with reason, 2=log event and trigger a connection to the Master Station).",
            "type": "integer",
            "comment": "enum?"
          },

          
          "dirctn": {
            "displayName": "",
            "description": "This object defines the point limit values for generating events when the current value of an analogue point exceeds a limi.",
            "type": "integer",
			"comment": "Direction (0=positive going (low-normal-high, 1=negative going (high-normal-low ))."
          },

          
          "value": {
            "displayName": "",
            "description": "Limit threshold value, in engineering units.",
            "type": "number"
          },

          
          "mon": {
            "displayName": "",
            "description": "Profiles reference numbers to be used for the days of the week.  All days may use the same profile or any combination of profiles against days.  If days are omitted or zero, then they are assumed to be reverting to the fixed limit threshold value above.",
            "type": "integer"
          },
          "tue": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "wed": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "thu": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "fri": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "sat": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "sun": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },

          
          "hyst": {
            "displayName": "",
            "description": "The hysteresis is an adjustment made to the limit value to set a further level beyond which the point value must travel to leave the state. The value of Hysteresis is always a positive number.",
            "type": "number"
          },

          
          "enter": {
            "displayName": "",
            "description": "The Enter Persistence defines the number of milliseconds the point value must have been beyond or equal to the limit value to enter the corresponding new state. The Enter Persistence is only used when a new limit state is entered with the point value moving away from the Normal State.",
            "type": "integer"
          },

          
          "leave": {
            "displayName": "",
            "description": "The Leave Persistence defines the number of milliseconds the point value must have been beyond the limit value with hysteresis to leave the current state (and therefore enter another state). The Leave Persistence is only used when a new limit state is entered with the point value moving towards the Normal State.",
            "type": "integer"
          }
        }
      },

      "analogueNoChange": {
        "displayName": {
          "en-US": "WITS Analogue no change alarm"
        },
        "parentTypes": [ "analogue", "counter" ],
        "minObjects": 0,
        "comment": "e.g. this device has a max of one no change alarm per analogue",
        "maxObjects": 1,
        "totalObjects": 50,

        "configFields": {
          
          "parent": {
            "displayName": "Parent Analogue",
            "description": "Analogue limits belong to analogue and counter parent points only. Only one per point.",
            "type": "integer"
          },

          "parentType": {
            "displayName": "Point Type",
            "description": "Type of the point. Must be a valid WITS-IoT point type suitable for no change alarm (ai, ao, c).",
            "type": "string",
            "enum": [
              "ai",
              "ao",
              "c"
            ]
          },

          
          "action": {
            "displayName": "",
            "description": "Action to be taken on transgressing the limit  (0=do nothing, 1=log event with reason, 2=log event and trigger a connection to the Master Station).",
            "type": "integer",
            "comment": "enum"
          },

          "deadband": {
            "displayName": "",
            "description": "The deadband is a value in engineering units. The point value must change this amount to raise the event. The value of Deadband is always a positive number.",
            "type": "number"
          },

          
          "period": {
            "displayName": "",
            "description": "The period defines the number of seconds the point value must have been within deadband value to raise the No Change event, in seconds.",
            "type": "integer"
          }
        }
      },

      "ct": {
        "displayName": {
          "en-US": "WITS Counter"
        },
        "parentTypes": [ "point" ],
        "minObjects": 0,
        "maxObjects": 50,
        "totalObjects": 50,

        "configFields": {
          
          "parent": {
            "displayName": "Parent Point",
            "description": "Counter features belong to counter parent points only.",
            "type": "integer"
          },

          
          "resetPeriod": {
            "displayName": "Reset Period",
            "description": "If zero or absent then will not reset. Interval between resets of this extension's value calculation, in seconds).",
            "type": "integer"
          },

          "resetOffset": {
            "displayName": "Reset Offset",
            "description": "Offset from start of week (Monday) in seconds.",
            "type": "integer"
          },

          "reportPeriod": {
            "displayName": "Report Period",
            "description": "Interval between reports of this extension's value. In seconds, starting at reset with last accumulated value.",
            "type": "integer"
          },

          "scale": {
            "displayName": "Scale Value",
            "description": "Multiplies raw value to get value of extension.",
            "type": "number"
          }
        }
      },

      "bi": {
        "displayName": {
          "en-US": "WITS Single Bit Binary Input Point"
        },
        "parentTypes": [ "point" ],
        "minObjects": 0,
        "maxObjects": 50,
        "totalObjects": 50,

        "configFields": {
          "parent": {
            "displayName": "Parent Point",
            "description": "Binary features belong to binary parent points only.",
            "type": "integer"
          },
		           
          "state0Action": {
            "displayName": "",
            "description": "0=do nothing, 1=log data, 2=log data and connect to master.",
            "type": "integer",
            "comment": "enum",
			"group": "Actions.State 0"
          },
          "state0Pers": {
            "displayName": "",
            "description": "Persistence – number of milliseconds the point must remain in this state before the action is taken. (Optional).",
            "type": "integer"
          },
          "state0Name": {
            "displayName": "",
            "description": "Name - name of state, may be used locally. (Optional)..",
            "type": "string"
          },
          "state1Action": {
            "displayName": "",
            "description": ".",
            "type": "integer",
            "comment": "enum"
          },
          "state1Pers": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "state1Name": {
            "displayName": "",
            "description": ".",
            "type": "string"
          },
          "state2Action": {
            "displayName": "",
            "description": ".",
            "type": "integer",
            "comment": "enum"
          },
          "state2Pers": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "state2Name": {
            "displayName": "",
            "description": ".",
            "type": "string"
          },
          "state3Action": {
            "displayName": "",
            "description": ".",
            "type": "integer",
            "comment": "enum"
          },
          "state3Pers": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "state3Name": {
            "displayName": "",
            "description": ".",
            "type": "string"
          },
          "state4Action": {
            "displayName": "",
            "description": ".",
            "type": "integer",
            "comment": "enum"
          },
          "state4Pers": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "state4Name": {
            "displayName": "",
            "description": ".",
            "type": "string"
          },
          "state5Action": {
            "displayName": "",
            "description": ".",
            "type": "integer",
            "comment": "enum"
          },
          "state5Pers": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "state5Name": {
            "displayName": "",
            "description": ".",
            "type": "string"
          },
          "state6Action": {
            "displayName": "",
            "description": ".",
            "type": "integer",
            "comment": "enum"
          },
          "state6Pers": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "state6Name": {
            "displayName": "",
            "description": ".",
            "type": "string"
          },
          "state7Action": {
            "displayName": "",
            "description": ".",
            "type": "integer",
            "comment": "enum"
          },
          "state7Pers": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "state7Name": {
            "displayName": "",
            "description": ".",
            "type": "string"
          }
        }
      },

      "profile": {
        "displayName": {
          "en-US": "WITS Profile"
        },
        "parentTypes": [ "device" ],
        "minObjects": 0,
        "maxObjects": 50,
        "totalObjects": 50,

        "configFields": {
          "comment": "Profile Index; profile objects must use consecutive profile indexes starting at 1. See profileCount in PointSupport for supported maximum.",
          "num": {
            "displayName": "Limit Number",
            "description": " Limit number (1-based with allowable numbers defined in the capability/points/addresses.).",
            "type": "integer",
            "minimum": 1,
            "maximum": 65535
          },
          
          "type": {
            "displayName": "",
            "description": "Value type (0=single precision float – analogue, 1=32-bit unsigned integer – counter and binary).",
            "type": "integer",
            "comment": "enum"
          },
          
          "values": {
            "displayName": "",
            "description": "Values array - first value applies at first time.",
            "array": true,
			"comment": "??Extend schema for this array method.",
            "type": "number"
          },
          
          "times": {
            "displayName": "",
            "description": "Times array - in seconds from start of day.",
            "array": true,
            "type": "number"
          },
          
          "inter": {
            "displayName": "",
            "description": "The interpolation time (in minutes) is the time period used to compute a new value for the profile, interpolating between two profile points.  If set to 0 then no interpolation is performed.",
            "type": "number"
          }
        }
      },

      "extPoint": {
        "comment": "Extended Point - used to create derived point values",
        "displayName": {
          "en-US": "WITS Extended Point"
        },
        "parentTypes": [ "point" ],
        "minObjects": 0,
        "maxObjects": 50,
        "totalObjects": 50,

        "configFields": {
          "parent": {
            "displayName": "Parent Point",
            "description": "Extended points belong to a parent point.",
            "type": "integer"
          },

          "parentType": {
            "displayName": "Point Type",
            "description": "Type of the point. Must be a valid WITS-IoT point type suitable for extensions (ai, bi{n}, ao, bo{n}, c).",
            "type": "string",
            "enum": [
              "ai",
              "bi",
              "bi2",
              "bi3",
              "ao",
              "bo",
              "bo2",
              "bo3",
              "c"
            ]
          },

          "num": {
			"comment": "Extension Point Index; Extended point objects must use consecutive indexes starting at 1.",
            "displayName": "Limit Number",
            "description": " Limit number (1-based with allowable numbers defined in the capability/points/addresses.). See extPointCount in PointSupport for supported maximum.",
            "type": "integer",
            "minimum": 1,
            "maximum": 65535
          },

          "name": {
            "displayName": "Point Name",
            "description": "The name is optional, and is a string which can be used by the device to report data values or to display locally. Furthermore the name string may contain a hierarchy of fields with a separator which can imply a structure.",
            "type": "string",
            "maxLength": 64
          },

          "class": {
            "displayName": "Point Class",
            "description": "The class is optional, and is a string which can be used by the Master to denote equipment or asset ontology.",
            "type": "string",
            "maxLength": 64
          },

          "type": {
            "displayName": "Extension Point Type",
            "description": "Run times count in 1 seconds units, scaled by the scaleFactoType of the extension. Counters count 1 per value change to 'state' value, also scaled.",
            "type": "string",
            "enum": [
              "Rate of Change",
              "Min",
              "Max",
              "Mean",
              "Integral",
              "Run Time",
              "Count"
            ]
          },

          "resetPeriod": {
            "displayName": "Reset Period",
            "description": "Interval between resets of this extension's value calculation, in seconds). If zero or absent then will not reset.",
            "type": "integer"
          },

          "resetOffset": {
            "displayName": "Reset Offset",
            "description": "Offset from start of week (Monday) in seconds.",
            "type": "integer"
          },

          "reportPeriod": {
            "displayName": "Report Period",
            "description": "Interval between reports of this extension's value. In seconds, starting at reset with last accumulated value.",
            "type": "integer"
          },

          "scale": {
            "displayName": "Scale Value",
            "description": "Multiplies raw value to get value of extension.",
            "type": "number"
          },

          "state": {
            "displayName": "State",
            "description": "Add to Run Time or Count when the source point equals this value. e.g. this is a digital state or analogue value. Only applies to Run Time or Counter.",
            "type": "integer"
          },
          "units": {
            "displayName": "",
            "description": "The units are a free format ASCII string that can be used when displaying the point value through local access displays etc. The Field Device should not interpret any meaning from this string and may choose to ignore it completely.",
            "type": ""
          }
        }
      },

      "controlProfile": {
        "displayName": {
          "en-US": "WITS Analogue Output Control Profile"
        },
        "parentTypes": [ "point" ],
        "minObjects": 0,
        "maxObjects": 5,
        "totalObjects": 5,

        "configFields": {
          
          "parent": {
            "displayName": "",
            "description": "Belong to analogue output points only.",
            "type": "integer"
          },

          "num": {
            "displayName": "Limit Number",
            "description": " Limit number (1-based with allowable numbers defined in the capability/points/addresses.) See controlProfileCount in PointSupport for supported maximum..",
            "type": "integer",
            "minimum": 1,
            "maximum": 65535
          },
          "mon": {
            "displayName": "Monday",
            "description": "Profile reference. If days are omitted, then they are assumed to be reverting to the fixed limit threshold value above.",
            "type": "integer"
          },
          "tue": {
            "displayName": "Tuesday",
            "description": "Profile reference.",
            "type": "integer"
          },
          "wed": {
            "displayName": "Wednesday",
            "description": "Profile reference.",
            "type": "integer"
          },
          "thu": {
            "displayName": "Thursday",
            "description": "Profile reference.",
            "type": "integer"
          },
          "fri": {
            "displayName": "Friday",
            "description": "Profile reference.",
            "type": "integer"
          },
          "sat": {
            "displayName": "Saturday",
            "description": "Profile reference.",
            "type": "integer"
          },
          "sun": {
            "displayName": "Sunday",
            "description": "Profile reference.",
            "type": "integer"
          }
        }
      },

      "highSpeedStore": {
        "displayName": {
          "en-US": "WITS Triggered High Speed Store"
        },
        "parentTypes": [ "point" ],
        "minObjects": 0,
        "maxObjects": 5,
        "totalObjects": 5,
		"comment": "Defines a high-speed sampling store for a point. Triggered by a digital input point. This defines parameters that are used by a Field Device to create additional log file entries as a result of an incident. To meet this requirement, the Field Device needs to be collecting the additional logging values.",
        "configFields": {
          "parent": {
            "displayName": "Parent Point Index",
            "description": "Parent point index.",
            "type": "integer"
          },
          "parentType": {
            "displayName": "Point Type",
            "description": "Type of the point. Must be a valid WITS-IoT point type suitable for storage (ai, bi{n}, ao, bo{n}, c).",
            "type": "string",
            "comment": "Device can restrict types available",
            "enum": [
              "ai",
              "bi",
              "bi2",
              "bi3",
              "ao",
              "bo",
              "bo2",
              "bo3",
              "c"
            ]
          },
          "num": {
            "displayName": "Store Number",
            "description": " Store number (1-based with allowable numbers defined in the capability/points/addresses.) Objects must use consecutive indexes starting at 1. See highSpeedStoreCount in PointSupport for supported maximum.",
            "type": "integer",
            "minimum": 1,
            "maximum": 65535
          },
          "trigger": {
            "displayName": "Trigger Point Index",
            "description": "Index of point causing this log to execute.",
            "type": "integer"
          },
          "triggerType": {
            "displayName": "Point Type",
            "description": "Type of the point causing this log to execute. Must be a valid WITS-IoT point type suitable for trigger bi{n}, bo{n}.",
            "type": "string",
            "comment": "Device can restrict types available.",
            "enum": [
              "bi",
              "bi2",
              "bi3",
              "bo",
              "bo2",
              "bo3"
            ]
          },
          "triggerValue": {
            "displayName": "Trigger Value",
            "description": "Trigger occurs when point equals this value.",
            "type": "integer"
          },
          "start": {
            "displayName": "Start",
            "description": "The time (relative to the start of the incident) when logging is to begin (in milliseconds). Negative values mean the log starts before the trigger time.",
            "type": "integer"
          },
          "length": {
            "displayName": "Length",
            "description": "The length of time (in milliseconds) to continue logging the point after the incident.",
            "type": "integer"
          },
          "rate": {
            "displayName": "Log Rate",
            "description": "The rate to be used (in milliseconds) to log the point during the incident.",
            "type": "integer"
          }

        }
      }
    }
  }
}
{
  "lucid": 2,
  "pRef": "ACME_Dev1_1-1",
  "canCoreUp": false,
  "canCoreDown": false,
  "canConfigDown": true,
  "reportEventsDirectly": true,
  "respondCurrentDataDirectly": true,
  "supportCompression": [ "gzip" ],
  "security": [ 0, 1, 2, 3 ],
  "body": {
    "capability": {
      "points": {
        "ai": [
          {
            "from": 1,
            "to": 2
          },
          {
            "from": 6,
            "to": 8
          }
        ],
        "bi": [
          {
            "from": 1,
            "to": 9
          }
        ],
        "ao": [
          {
            "from": 1,
            "to": 9
          }
        ],
        "bo": [
          {
            "comment": "Binary Output points (maintained or pulsed – see later for feature specification)",
            "from": 1,
            "to": 9
          }
        ],
        "c": [
          {
            "comment": "Counter Points (these points may be exclusive to binary inputs on their point numbers, .i.e. a binary input may or may not use the same number as a counter – see later for feature specification)",
            "from": 1,
            "to": 2
          }
        ],
        "s": [
          {
            "comment": "String points. These can be input or output. Application examples include text strings or mime encoded data in BASE64. The MIME type is an optional field in the string.",
            "from": 1,
            "to": 1
          }
        ]
      },
      "channels": [
        {
          "name": "Ethernet 1",
          "num": 1
        },
        {
          "name": "GPRS",
          "num": 2
        }
      ],
      "deviceLinks": [
        {
          "name": "Internal",
          "num": 0
        },
        {
          "name": "Onboard",
          "num": 1
        },
        {
          "name": "PLC1",
          "num": 2
        },
        {
          "name": "Calc",
          "num": 3
        }
      ],
      "commands": [
        "getdata",
        "setclock",
        "control",
        "override",
        "getdeviceinfo"
      ]
    },

    "objectTypes": {
      "device": {
        "displayName": {
          "en-US": "Lucid Device"
        },
        "minObjects": 1,
        "maxObjects": 1,
        "totalObjects": 1,

        "configFields": {
          "nid": {
            "type": "string",
            "displayName": "Node Id",
            "description": "The unique Id applying to the field application. Remains the same when replacing a device.",
            "maxLength": 64,
            "required": true
          },
          "name": {
            "displayName": "Name",
            "type": "string",
            "description": "Name as used by the SA.",
            "required": true,
            "maxLength": 50
          },
          "loc": {
            "displayName": "Location",
            "description": "Location of the device, such as an address.",
            "type": "string",
            "maxLength": 100
          },
          "ownr": {
            "displayName": "Owner",
            "type": "string",
            "maxLength": 50
          },
          "asst": {
            "displayName": "Asset",
            "type": "string",
            "description": "Owners asset code.",
            "maxLength": 50
          },
          "serl": {
            "displayName": "Serial Number",
            "type": "string",
            "maxLength": 50
          },
          "latitude": {
            "comment": "There is a json schema type for this, so consider replacing.",
            "displayName": "Latitude",
            "description": "In degrees (WGS84).",
            "type": "number",
            "max": 90,
            "min": -90,
            "enable": "location=true"
          },
          "longitude": {
            "displayName": "Longitude",
            "description": "In degrees (WGS84).",
            "type": "number",
            "max": 180,
            "min": -180,
            "enable": "location=true"
          },
          "scan": {
            "displayName": "On Scan",
            "description": "Device on/off scan (started/stopped).",
            "type": "boolean",
            "required": true
          }
        }
      },

      "channel": {
        "comment": "One or more channel objects.  Note that the channels are listed in priority order, if applicable, from highest first. Typically a device could have multiple channels with different capabilities, in which case each channel adds the fields needed as appropriate.",
        "displayName": {
          "en-US": "Lucid Channel"
        },

        "parentTypes": [ "device" ],
        "minObjects": 1,
        "maxObjects": 1,
        "totalObjects": 1,

        "configFields": {
          "num": {
            "displayName": "Channel Number",
            "description": "Channel index number.",
            "type": "integer",
            "min": 1,
            "max": 65535,
            "required": true
          },

          "name": {
            "displayName": "Channel Name",
            "description": "Channel name.",
            "type": "string",
            "maxLength": 100,
            "required": true
          },

          "conn": {
            "displayName": "Connection String",
            "description": "Name to connect to the data service, such as APN, SSID or device-specific connection details.",
            "type": "string"
          },

          "dns": {
            "displayName": "DNS",
            "description": "DNS names in a comma-separated string.",
            "type": "string"
          }
        }
      },

      "connection": {
        "comment": "One or more connection objects.",
        "displayName": {
          "en-US": "Lucid Connection"
        },

        "parentTypes": [ "device" ],
        "minObjects": 1,
        "maxObjects": 1,
        "totalObjects": 1,

        "configFields": {
          "num": {
            "displayName": "Connection Number",
            "description": "Connection index number.",
            "type": "integer",
            "min": 1,
            "max": 65535,
            "required": true
          },

          "name": {
            "displayName": "Connection Name",
            "description": "Connection name.",
            "type": "string",
            "maxLength": 100,
            "required": true
          },

          "channel": {
            "displayName": "Channel",
            "description": "Channel number.",
            "type": "integer",
            "min": 1,
            "max": 65535,
            "required": true
          },

          "prot": {
            "displayName": "Network Protocol",
            "description": "Defines the type of networking supported",
            "type": "integer",
            "enum": [
              "IPv4(TCP)",
              "IPv6(TCP)"
            ],
            "required": true
          },

          "net": {
            "displayName": "Network Address",
            "description": "Network information containing the IPv4 or IPv6 DNS name or IP address plus : port number (default 20000 if omitted).",
            "type": "string",
            "maxLength": 128,
            "required": true
          },

          "retries": {
            "comment": "Defines the number of retries.",
            "displayName": "Retries",
            "description": "Number of retries.",
            "type": "integer",
            "min": 0,
            "max": 10
          },

          "backoff": {
            "displayName": "Backoff",
            "description": "Retry interval (seconds).",
            "type": "integer",
            "min": 1,
            "max": 600
          }
        }
      },

      "connectionSchedule": {
        "comment": "One or more connection objects.  Note that the channels are listed in priority order, if applicable, from highest first. Typically a device could have multiple channels with different capabilities, in which case each channel adds the fields needed as appropriate.",
        "displayName": {
          "en-US": "Lucid Connection Schedule"
        },

        "parentTypes": [ "device" ],
        "minObjects": 1,
        "maxObjects": 2,
        "totalObjects": 2,

        "configFields": {
          "num": {
            "displayName": "Schedule Number",
            "description": "Connection Schedule index number.",
            "type": "integer",
            "min": 1,
            "max": 65535,
            "required": true
          },

          "start": {
            "displayName": "Start",
            "description": "The start time for the scheduled connection, as an offset in milliseconds from the start of the week (or month if startBoundary is 1).",
            "type": "integer",
            "min": 0,
            "group": "commsSchedule",
            "order": 1
          },

          "repeat": {
            "displayName": "Repeat",
            "description": "The number of milliseconds between the start of each connection attempt.",
            "type": "integer",
            "min": 1,
            "max": 604800000,
            "group": "commsSchedule",
            "order": 2
          },

          "count": {
            "displayName": "Repeat Count",
            "description": "The number of repeats during the startBoundary interval.",
            "type": "integer",
            "min": 1,
            "max": 10000,
            "group": "commsSchedule",
            "order": 3
          },

          "startBoundary": {
            "displayName": "Start Boundary",
            "description": "0 = Day (default), 1 = Week, 2 = Month.",
            "type": "integer",
            "min": 0,
            "max": 1,
            "group": "commsSchedule",
            "order": 4
          }
        }
      },

      "deviceLink": {
        "comment": "One or more objects. All points 'connect' to a Device Link.",
        "displayName": {
          "en-US": "Lucid Device Link"
        },
        "parentTypes": [ "device" ],
        "minObjects": 1,
        "maxObjects": 1,

        "configFields": {
          "num": {
            "displayName": "Device Link Number",
            "description": "Device Link index number.",
            "type": "integer",
            "min": 1,
            "max": 65535,
            "required": true
          },
          "name": {
            "displayName": "Device Link Name",
            "description": "Device Link name.",
            "type": "string",
            "maxLength": 100,
            "required": true
          },
          "conn": {
            "displayName": "Connection String",
            "description": "Device Link Connection String. This is optional and can be used to configure the characteristics of the connected IO.",
            "type": "string",
            "maxLength": 100
          }
        }
      },

      "point": {
        "displayName": {
          "en-US": "Lucid Point"
        },
        "parentTypes": [ "deviceLink" ],
        "minObjects": 0,
        "maxObjects": 100,
        "totalObjects": 100,

        "configFields": {

          "parent": {
            "displayName": "Device Link",
            "description": "Reference to the Device Link for this point.",
            "type": "integer",
            "required": true
          },

          "num": {
            "displayName": "Point Number",
            "description": " Point number (1-based with allowable numbers defined in the capability/points/addresses.).",
            "type": "integer",
            "min": 1,
            "max": 65535,
            "required": true
          },

          "type": {
            "displayName": "Point Type",
            "description": "Type of the point. Must be a valid point type (ai, bi, ao, bo, c, s).",
            "type": "string",
            "enum": [
              "ai",
              "bi",
              "ao",
              "bo",
              "c",
              "s"
            ],
            "comment": "A device may not support all of these items, as indicated in the point capability address ranges.",
            "required": true
          },

          "name": {
            "displayName": "Point Name",
            "description": "The name is optional, and is a string which can be used by the device to report data values or to display locally. Furthermore the name string may contain a hierarchy of fields with a separator which can imply a structure.",
            "type": "string",
            "maxLength": 64
          },

          "className": {
            "displayName": "Point Class",
            "description": "The class is optional, and is a string which can be used by the SA to denote equipment or asset ontology.",
            "type": "string",
            "maxLength": 64
          },

          "scan": {
            "displayName": "Point On-Scan",
            "description": "On-scan is set to True if the point is active (or needs to be made active).",
            "type": "boolean",
            "required": true
          },

          "canOverride": {
            "displayName": "Can Override",
            "description": "Whether local override is permitted.",
            "type": "boolean"
          },

          "scanRate": {
            "displayName": "Scan Rate",
            "description": "Base periodic read rate of the source data/hardware. In milliseconds. Also used for Calculation points.",
            "type": "integer",
            "comment": "If not specified the device may use its own rate, but will be the faster of the logRate or any attached incidentLog rates."
          },

          "scanOffset": {
            "displayName": "Scan Offset",
            "description": "Offset time from the start of the week that the scanning is synchronised from (Monday, 00:00:00). Measured in milliseconds.  If 0, then log is offset from the last midnight. Also used for Calculation points.",
            "type": "integer"
          },

          "logRate": {
            "displayName": "Log Rate",
            "description": "Base periodic logging rate (0=no logging). In milliseconds.",
            "type": "integer"
          },

          "logOffset": {
            "displayName": "Log Offset",
            "description": "Offset time from the start of the week that the log is synchronised from (Monday, 00:00:00). Measured in milliseconds.  If 0, then log is offset from the last midnight.",
            "type": "integer"
          },

          "whenConnected": {
            "displayName": "When Connected",
            "description": "When the device has successfully made contact with the broker, the value will be sent to the SA if this action is 1.",
            "type": "number",
            "comment": "Actions to be taken when a points status changes (enabled or disabled).  The status types are listed.  The action may be: 0=do nothing (default), 1=log event."
          },

          "whenOnline": {
            "displayName": "When Online",
            "description": "ONLINE flag is set when the point is on-scan and active..",
            "type": "number",
            "comment": "Actions to be taken when a points status changes (enabled or disabled).  The status types are listed.  The action may be: 0=do nothing (default), 1=log event, 3=log event and call SA."
          },

          "whenRestart": {
            "displayName": "When Restarted",
            "description": "RESTART flag is set when the point has been reconfigured or the field device or point have come ON-SCAN. This flag remains set until the first value has been recorded by the field device. The action may be: 0=do nothing (default), 1=log event, 3=log event and call SA.",
            "type": "number"
          },

          "whenCommsLost": {
            "displayName": "When Communications Lost",
            "description": "The commslost (or COMM_LOST) flag indicates that communications with the downstream device have been lost. The action may be: 0=do nothing (default), 1=log event, 3=log event and call SA.",
            "type": "number"
          },

          "whenRemForce": {
            "displayName": "When Remotely Forced",
            "description": "The remforce (REMOTE_FORCED) flag indicates that the value of the point has been forced to a value by a downstream device. The action may be: 0=do nothing (default), 1=log event, 3=log event and call SA.",
            "type": "number"
          },

          "whenLocForce": {
            "displayName": "When Locally Forced",
            "description": "The locforced (LOCAL_FORCED) flag indicates that the value of the point has been forced to a value by the device (test state, for example) or by human interaction. The action may be: 0=do nothing (default), 1=log event, 3=log event and call SA.",
            "type": "number"
          },

          "whenChatter": {
            "displayName": "When Chatter",
            "description": "The chatter (CHATTER_FILTER) flag indicates that a binary or double-bit binary point is changing value often enough to trigger a chatter filter. The action may be: 0=do nothing (default), 1=log event, 3=log event and call SA.",
            "type": "number"
          },

          "whenOverrange": {
            "displayName": "When Overrange",
            "description": "The overrange (OVER_RANGE) flag indicates that the point’s true value exceeds the defined range that the point supports (analogue inputs only). The action may be: 0=do nothing (default), 1=log event, 3=log event and call SA.",
            "type": "number"
          },

          "whenDiscontinuity": {
            "displayName": "When Discontinuity",
            "description": "The discontinuity flag indicates that the reported value cannot be compared against previous values for calculating count difference (e.g. rate of change calculation). The action may be: 0=do nothing (default), 1=log event, 3=log event and call SA.",
            "type": "number"
          },

          "whenRefError": {
            "displayName": "When Ref Error",
            "description": "The Reference Error flag indicates that the measurement process has determined that the object’s data value may not have the expected level of accuracy. For example, the reference signal used in the analogue-to-digital conversion process is out of limits, or a calculated value has been contaminated with noise (analogue inputs only). The action may be: 0=do nothing (default), 1=log event, 3=log event and call SA.",
            "type": "number"
          },

          "whenChange": {
            "displayName": "When Changed",
            "description": "If the point has changed value (in the case of an analogue or counter, if changed outside significant change deadband. The action may be: 0=do nothing (default), 1=log event, 3=log event and call SA.",
            "type": "number"
          },

          "calcCode": {
            "comment": "Specify this only for a calculated point (the deviceLink is Calc). The code is compiled from an expression by the configuring application.",
            "displayName": "Calculation Code Data",
            "description": "Array of calculation instruction items.",
            "type": "arrayOfNumber"
          },

          "calcOnChange": {
            "comment": "Relevant to calculated points only.",
            "displayName": "Calculate on Change",
            "description": "Causes calculation when any input values or their qualities change.",
            "type": "boolean"
          }
        }
      },

      "binary": {
        "displayName": {
          "en-US": "Lucid Binary Point"
        },
        "parentTypes": [ "point" ],
        "minObjects": 0,
        "maxObjects": 50,
        "totalObjects": 50,

        "configFields": {
          "parent": {
            "displayName": "Parent Point",
            "description": "Binary features belong to binary parent points only.",
            "type": "integer"
          },

          "ParentType": {
            "displayName": "Point Type",
            "description": "Type of the point. Must be a valid point type (bi, bo).",
            "type": "string",
            "enum": [
              "bi",
              "bo"
            ]
          },

          "bits": {
            "displayName": "Bit Count",
            "description": "Number of bits: 1, 2 or 3. (Default is 1).",
            "type": "integer"
          },

          "state0Action": {
            "displayName": "State 0 Action",
            "description": "0=do nothing, 1=log data, 2=log data and connect to SA.",
            "type": "integer"
          },

          "state0Pers": {
            "displayName": "State 0 Persistence",
            "description": "Persistence – number of milliseconds the point must remain in this state before the action is taken. (Optional).",
            "type": "integer"
          },

          "state0Name": {
            "displayName": "State 0 Name",
            "description": "Name - name of state, may be used locally. (Optional).",
            "type": "string"
          },

          "state1Action": {
            "displayName": "State 1 Action",
            "description": "0=do nothing, 1=log data, 2=log data and connect to SA.",
            "type": "integer"
          },

          "state1Pers": {
            "displayName": "State 1 Persistence",
            "description": "Persistence – number of milliseconds the point must remain in this state before the action is taken. (Optional).",
            "type": "integer"
          },

          "state1Name": {
            "displayName": "State 1 Name",
            "description": "Name - name of state, may be used locally. (Optional).",
            "type": "string"
          },

          "state2Action": {
            "displayName": "State 2 Action",
            "description": "2=do nothing, 1=log data, 2=log data and connect to SA.",
            "type": "integer"
          },

          "state2Pers": {
            "displayName": "State 2 Persistence",
            "description": "Persistence – number of milliseconds the point must remain in this state before the action is taken. (Optional).",
            "type": "integer"
          },

          "state2Name": {
            "displayName": "State 2 Name",
            "description": "Name - name of state, may be used locally. (Optional).",
            "type": "string"
          },

          "state3Action": {
            "displayName": "State 3 Action",
            "description": "0=do nothing, 1=log data, 2=log data and connect to SA.",
            "type": "integer"
          },

          "state3Pers": {
            "displayName": "State 3 Persistence",
            "description": "Persistence – number of milliseconds the point must remain in this state before the action is taken. (Optional).",
            "type": "integer"
          },

          "state3Name": {
            "displayName": "State 3 Name",
            "description": "Name - name of state, may be used locally. (Optional).",
            "type": "string"
          },

          "state4Action": {
            "displayName": "State 4 Action",
            "description": "0=do nothing, 1=log data, 2=log data and connect to SA.",
            "type": "integer"
          },

          "state4Pers": {
            "displayName": "State 4 Persistence",
            "description": "Persistence – number of milliseconds the point must remain in this state before the action is taken. (Optional).",
            "type": "integer"
          },

          "state4Name": {
            "displayName": "State 4 Name",
            "description": "Name - name of state, may be used locally. (Optional).",
            "type": "string"
          },

          "state5Action": {
            "displayName": "State 5 Action",
            "description": "0=do nothing, 1=log data, 2=log data and connect to SA.",
            "type": "integer"
          },

          "state5Pers": {
            "displayName": "State 5 Persistence",
            "description": "Persistence – number of milliseconds the point must remain in this state before the action is taken. (Optional).",
            "type": "integer"
          },

          "state5Name": {
            "displayName": "State 5 Name",
            "description": "Name - name of state, may be used locally. (Optional).",
            "type": "string"
          },

          "state6Action": {
            "displayName": "State 6 Action",
            "description": "0=do nothing, 1=log data, 2=log data and connect to SA.",
            "type": "integer"
          },

          "state6Pers": {
            "displayName": "State 6 Persistence",
            "description": "Persistence – number of milliseconds the point must remain in this state before the action is taken. (Optional).",
            "type": "integer"
          },

          "state6Name": {
            "displayName": "State 6 Name",
            "description": "Name - name of state, may be used locally. (Optional).",
            "type": "string"
          },

          "state7Action": {
            "displayName": "State 7 Action",
            "description": "0=do nothing, 1=log data, 2=log data and connect to SA.",
            "type": "integer"
          },

          "state7Pers": {
            "displayName": "State 7 Persistence",
            "description": "Persistence – number of milliseconds the point must remain in this state before the action is taken. (Optional).",
            "type": "integer"
          },

          "state7Name": {
            "displayName": "State 7 Name",
            "description": "Name - name of state, may be used locally. (Optional).",
            "type": "string"
          },

          "controlPulseTime": {
            "displayName": "Control Pulse Time",
            "description": "Control Pulse time (milliseconds) applies only to 1 bit binary output points.",
            "type": "integer"
          },

          "controlPulsePolarity": {
            "displayName": "Control Pulse Polarity",
            "description": "Control Pulse polarity applies only to 1 bit binary output points. If True then the pulse is from 1 to 0 and back to 1. If False then the pulse is from 0 to 1 and back to 0.",
            "type": "boolean"
          }
        }
      },

      "analogue": {
        "displayName": {
          "en-US": "Lucid Analogue Point"
        },
        "parentTypes": [ "point" ],
        "minObjects": 0,
        "maxObjects": 50,
        "totalObjects": 50,

        "configFields": {

          "parent": {
            "displayName": "Parent Point",
            "description": "Analogue features belong to analogue parent points only.",
            "type": "integer",
            "required": true
          },

          "parentType": {
            "displayName": "Point Type",
            "description": "Type of the point. Must be a valid point type (ai, ao).",
            "type": "string",
            "enum": [
              "ai",
              "ao"
            ],
            "required": true
          },

          "rawsc1": {
            "displayName": "Raw Scale 1",
            "description": "Raw Scale 1  is the first raw value of the point (e.g. lower or zero value for the instrument).",
            "type": "number"
          },

          "rawsc2": {
            "displayName": "Raw Scale 2",
            "description": "Raw scale 2 is the second raw value for the scaling (e.g. higher or full scale value of the instrument).",
            "type": "number"
          },

          "engsc1": {
            "displayName": "Eng Scale 1",
            "description": "Engineering Scale 1 ; this is the first engineering value that corresponds to the first raw value (e.g. smallest scaled output that can be reported.",
            "type": "number"
          },

          "engsc2": {
            "displayName": "Eng Scale 2",
            "description": "Engineering scale 2; this is the second engineering value that corresponds to the second raw value (e.g. the highest scaled value that can be recorded).",
            "type": "number"
          },

          "min": {
            "displayName": "Minimum",
            "description": "The measurement range’s minimum value, in engineering units. If a value is below the minimum, then it is under-range. The OVER_RANGE flag must be set when reporting values that are under-range. Under-range values should not be used when determining significant data (dead-band) changes.",
            "type": "number"
          },

          "max": {
            "displayName": "Maximum",
            "description": "The measurement range’s maximum value, in engineering units. If a value is above the maximum, then it is over-range. The OVER_RANGE flag must be set when reporting values that are over-range. Over-range values should not be used when determining significant data (dead-band) changes.",
            "type": "number"
          },

          "units": {
            "displayName": "Units",
            "description": "The units are a free format ASCII string that can be used when displaying the point value through local access displays etc. The Field Device should not interpret any meaning from this string and may choose to ignore it completely.",
            "type": "string"
          },

          "change": {
            "displayName": "Significant Change Value",
            "description": "This configuration record defines parameters that are used by a Field Device to take an action when an analogue point changes by a significant amount.",
            "type": "number"
          }
        }
      },

      "counter": {
        "displayName": {
          "en-US": "Lucid Counter"
        },
        "parentTypes": [ "point" ],
        "minObjects": 0,
        "maxObjects": 50,
        "totalObjects": 50,

        "configFields": {

          "parent": {
            "displayName": "Parent Point",
            "description": "Counter features belong to counter parent points only.",
            "type": "integer",
            "required": true
          },

          "resetPeriod": {
            "displayName": "Reset Period",
            "description": "If zero or absent then will not reset. Interval between resets of this point's value calculation, in seconds).",
            "type": "integer"
          },

          "resetOffset": {
            "displayName": "Reset Offset",
            "description": "Offset from start of week (Monday) in seconds.",
            "type": "integer"
          },

          "reportPeriod": {
            "displayName": "Report Period",
            "description": "Interval between reports of this point's value. In seconds, starting at reset with last accumulated value.",
            "type": "integer"
          },

          "scale": {
            "displayName": "Scale Value",
            "description": "Multiplies the number of counts to evaluate the value of this counter. i.e. this is the scaled value of one count.",
            "type": "number"
          },

          "units": {
            "displayName": "Units",
            "description": "The units are a free format ASCII string that can be used when displaying the point value through local access displays etc. The Field Device should not interpret any meaning from this string and may choose to ignore it completely.",
            "type": "string"
          },

          "change": {
            "displayName": "Significant Change Value",
            "description": "This configuration record defines parameters that are used by a Field Device to take an action when a counter point changes by a significant amount.",
            "type": "number"
          }
        }
      },

      "string": {
        "displayName": {
          "en-US": "Lucid String"
        },
        "parentTypes": [ "point" ],
        "minObjects": 0,
        "maxObjects": 50,
        "totalObjects": 50,

        "configFields": {

          "parent": {
            "displayName": "Parent Point",
            "description": "String features belong to string parent points only.",
            "type": "integer",
            "required": true
          },

          "maxLen": {
            "displayName": "Maximum Length",
            "description": "Maximum string length the device can support. The max property here is customised for this Device Profile.",
            "type": "integer",
            "min": 1,
            "max": 65535,
            "required": true
          },

          "mime": {
            "displayName": "Mime Type",
            "description": "IANA official MIME type name. If the mime type is not 'text/*' then the string is base64 encoded. If unspecified then the type is text/plain.",
            "type": "string"
          },

          "access": {
            "displayName": "Access Type",
            "description": "Read or Read/Write. Write access permits control operations. Default is read-only.",
            "type": "string",
            "enum": [
              "r",
              "rw"
            ]
          }
        }
      },

      "analogueLimit": {
        "displayName": {
          "en-US": "Lucid Analogue Point Limit"
        },
        "parentTypes": [ "analogue" ],
        "minObjects": 4,
        "comment": "e.g. this device has a mandatory four limits per analogue",
        "maxObjects": 4,
        "totalObjects": 200,

        "configFields": {

          "parent": {
            "displayName": "Point Number",
            "description": "Analogue limits belong to analogue parent points only.",
            "type": "integer",
            "required": true
          },

          "parentType": {
            "displayName": "Parent Point Type",
            "description": "Type of the point. Must be a valid point type suitable for limits (ai, ao).",
            "type": "string",
            "enum": [
              "ai",
              "ao",
              "x"
            ],
            "required": true
          },

          "num": {
            "comment": "Limit Index; limit objects must use consecutive limit indexes starting at 1. The lowest index value must correspond to the lowest limit and the maximum index to the highest limit. (Allowable numbers defined in the min/max/totalObjects).",
            "displayName": "Limit Number",
            "description": "Limit number (1-based with allowable numbers defined in the min/max/totalObjects).",
            "type": "integer",
            "min": 1,
            "max": 65535,
            "required": true
          },

          "name": {
            "displayName": "Limit Name",
            "description": "Name of this alarm limit.",
            "type": "string"
          },

          "action": {
            "displayName": "",
            "description": "Action to be taken on transgressing the limit  (0=do nothing, 1=log event with reason, 2=log event and trigger a connection to the SA).",
            "type": "integer",
            "required": true
          },

          "dirctn": {
            "displayName": "",
            "description": "This object defines the point limit values for generating events when the current value of an analogue point exceeds a limi.",
            "type": "integer",
            "comment": "Direction (0=positive going (low-normal-high, 1=negative going (high-normal-low )).",
            "required": true
          },

          "value": {
            "displayName": "",
            "description": "Limit threshold value, in engineering units.",
            "type": "number",
            "required": true
          },

          "mon": {
            "displayName": "",
            "description": "Profiles reference numbers to be used for the days of the week.  All days may use the same profile or any combination of profiles against days.  If days are omitted or zero, then they are assumed to be reverting to the fixed limit threshold value above.",
            "type": "integer"
          },
          "tue": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "wed": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "thu": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "fri": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "sat": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },
          "sun": {
            "displayName": "",
            "description": ".",
            "type": "integer"
          },

          "hyst": {
            "displayName": "",
            "description": "The hysteresis is an adjustment made to the limit value to set a further level beyond which the point value must travel to leave the state. The value of Hysteresis is always a positive number.",
            "type": "number"
          },

          "enter": {
            "displayName": "",
            "description": "The Enter Persistence defines the number of milliseconds the point value must have been beyond or equal to the limit value to enter the corresponding new state. The Enter Persistence is only used when a new limit state is entered with the point value moving away from the Normal State.",
            "type": "integer"
          },

          "leave": {
            "displayName": "",
            "description": "The Leave Persistence defines the number of milliseconds the point value must have been beyond the limit value with hysteresis to leave the current state (and therefore enter another state). The Leave Persistence is only used when a new limit state is entered with the point value moving towards the Normal State.",
            "type": "integer"
          }
        }
      },

      "counterLimit": {
        "displayName": {
          "en-US": "Lucid Counter Point Limit"
        },
        "parentTypes": [ "counter" ],
        "minObjects": 2,
        "comment": "e.g. this device has a mandatory two limits per counter",
        "maxObjects": 2,
        "totalObjects": 200,

        "configFields": {

          "parent": {
            "displayName": "Parent Point Number",
            "description": "Counter limits belong to counter parent points only.",
            "type": "integer",
            "required": true
          },

          "num": {
            "comment": "Limit Index; limit objects must use consecutive limit indexes starting at 1. The lowest index value must correspond to the lowest limit and the maximum index to the highest limit. (Allowable numbers defined in the min/max/totalObjects).",
            "displayName": "Limit Number",
            "description": "Limit number (1-based with allowable numbers defined in the min/max/totalObjects).",
            "type": "integer",
            "min": 1,
            "max": 65535,
            "required": true
          },

          "name": {
            "displayName": "Limit Name",
            "description": "Name of this alarm limit.",
            "type": "string"
          },

          "action": {
            "displayName": "",
            "description": "Action to be taken on transgressing the limit  (0=do nothing, 1=log event with reason, 2=log event and trigger a connection to the SA).",
            "type": "integer",
            "required": true
          },

          "value": {
            "displayName": "",
            "description": "Limit threshold value, in engineering units.",
            "type": "number",
            "required": true
          },

          "mon": {
            "displayName": "Limit Profile reference for Monday",
            "description": "Limit Profiles reference numbers to be used for the days of the week.  All days may use the same limit profile or any combination of profiles against days.  If days are omitted or zero, then they are assumed to be reverting to the fixed limit threshold value above.",
            "type": "integer"
          },
          "tue": {
            "displayName": "Limit Profile reference for Tuesday",
            "description": "Limit Profile reference.",
            "type": "integer"
          },
          "wed": {
            "displayName": "Limit Profile reference for Wednesday",
            "description": "Limit Profile reference.",
            "type": "integer"
          },
          "thu": {
            "displayName": "Limit Profile reference for Thursday",
            "description": "Limit Profile reference.",
            "type": "integer"
          },
          "fri": {
            "displayName": "Limit Profile reference for Friday",
            "description": "Limit Profile reference.",
            "type": "integer"
          },
          "sat": {
            "displayName": "Limit Profile reference for Saturday",
            "description": "Limit Profile reference.",
            "type": "integer"
          },
          "sun": {
            "displayName": "Limit Profile reference for Sunday",
            "description": "Limit Profile reference.",
            "type": "integer"
          }

        }
      },

      "noChange": {
        "displayName": {
          "en-US": "Lucid no change alarm"
        },
        "parentTypes": [ "analogue", "counter", "extPoint" ],
        "minObjects": 0,
        "comment": "e.g. this device has a max of one no change alarm per point. Can apply to analogue or counter.",
        "maxObjects": 1,
        "totalObjects": 50,

        "configFields": {

          "parent": {
            "displayName": "Parent Point",
            "description": "No change alarms belong to analogue and counter parent points only. Only one per point.",
            "type": "integer",
            "required": true
          },

          "parentType": {
            "displayName": "Point Type",
            "description": "Type of the point. Must be a valid point type suitable for no change alarm (ai, ao, c).",
            "type": "string",
            "enum": [
              "ai",
              "ao",
              "c",
              "x"
            ],
            "required": true
          },

          "num": {
            "comment": "Unlikely to have more than one of these. Limit Index; limit objects must use consecutive limit indexes starting at 1. The lowest index value must correspond to the lowest limit and the maximum index to the highest limit. (Allowable numbers defined in the min/max/totalObjects).",
            "displayName": "Limit Number",
            "description": "Limit number (1-based with allowable numbers defined in the min/max/totalObjects).",
            "type": "integer",
            "min": 1,
            "max": 65535,
            "required": true
          },

          "name": {
            "displayName": "Alarm Name",
            "description": "Name of this no change alarm.",
            "type": "string"
          },

          "deadband": {
            "displayName": "Deadband",
            "description": "The deadband is a value in engineering units. The point value must change this amount to raise the event. The value of Deadband is always a positive number.",
            "type": "number"
          },

          "period": {
            "displayName": "Period",
            "description": "The period defines the number of seconds the point value must have been within deadband value to raise the No Change event, in seconds.",
            "type": "integer",
            "required": true
          },

          "action": {
            "displayName": "Action",
            "description": "Action to be taken on no change  (0=do nothing, 1=log event with reason, 2=log event and trigger a connection to the SA).",
            "type": "integer",
            "comment": "enum",
            "required": true
          }
        }
      },

      "extPoint": {
        "comment": "Extended Point - used to create secondary point values",
        "displayName": {
          "en-US": "Lucid Extended Point"
        },
        "parentTypes": [ "point" ],
        "minObjects": 0,
        "maxObjects": 50,
        "totalObjects": 50,

        "configFields": {
          "parent": {
            "displayName": "Parent Point",
            "description": "Extended points belong to a parent point.",
            "type": "integer",
            "required": true
          },

          "parentType": {
            "displayName": "Parent Point Type",
            "description": "Type of the source point. Must be a valid point type suitable for extended points (ai, bi, ao, bo, c).",
            "type": "string",
            "enum": [
              "ai",
              "bi",
              "ao",
              "bo",
              "c"
            ],
            "required": true
          },

          "num": {
            "comment": "Extended Point Index; Extended point objects must use consecutive indexes starting at 1.",
            "displayName": "Extended Point Number",
            "description": "Extended Point number (1-based with allowable numbers defined in the min/max/totalObjects).",
            "type": "integer",
            "min": 1,
            "max": 65535,
            "required": true
          },

          "name": {
            "displayName": "Point Name",
            "description": "The name is optional, and is a string which can be used by the device to report data values or to display locally. Furthermore the name string may contain a hierarchy of fields with a separator which can imply a structure.",
            "type": "string",
            "maxLength": 64
          },

          "className": {
            "displayName": "Point Class",
            "description": "The class is optional, and is a string which can be used by the SA to denote equipment or asset ontology.",
            "type": "string",
            "maxLength": 64
          },

          "type": {
            "displayName": "Extended Point Type",
            "description": "Run times count in 1 seconds units, scaled by the scaleFactorType of the extended point. Counters count 1 per value change to 'state' value, also scaled.",
            "type": "string",
            "enum": [
              "RoC",
              "Min",
              "Max",
              "Mean",
              "StdDev",
              "Integral",
              "Run Time",
              "Count"
            ],
            "required": true
          },

          "resetPeriod": {
            "displayName": "Reset Period",
            "description": "Interval between resets of this extended point's value calculation, in milliseconds). If zero or absent then will not reset.",
            "type": "integer"
          },

          "resetOffset": {
            "displayName": "Reset Offset",
            "description": "Offset from start of week (Monday) in milliseconds.",
            "type": "integer"
          },

          "reportPeriod": {
            "displayName": "Report Period",
            "description": "Interval between reports of this extended point's value. In milliseconds, starting at reset with last accumulated value.",
            "type": "integer"
          },

          "scale": {
            "displayName": "Scale Value",
            "description": "Multiplies the raw (input) value to get the value of this extended point.",
            "type": "number"
          },

          "stateMask": {
            "displayName": "State Mask",
            "description": "Increment the Run Time or Count when the source point value matches this bit mask. Only applies to Run Time or Counter.",
            "type": "integer"
          },

          "units": {
            "displayName": "Units",
            "description": "The units are a free format ASCII string that can be used when displaying the point value through local access displays etc. The Field Device should not interpret any meaning from this string and may choose to ignore it completely.",
            "type": "string"
          }
        }
      },

      "limitProfile": {
        "displayName": {
          "en-US": "Lucid Limit and Control Profile"
        },
        "parentTypes": [ "device" ],
        "minObjects": 0,
        "maxObjects": 50,
        "totalObjects": 50,

        "configFields": {
          "num": {
            "displayName": "Limit Number",
            "description": "Limit number (1-based with allowable numbers defined in the min/max/totalObjects).",
            "type": "integer",
            "min": 1,
            "max": 65535,
            "required": true
          },

          "values": {
            "displayName": "Limit Values",
            "description": "Values array - first value applies at first time.",
            "array": true,
            "type": "number",
            "required": true
          },

          "times": {
            "displayName": "Limit Times",
            "description": "Times array - in milliseconds from start of day.",
            "array": true,
            "type": "number",
            "required": true
          },

          "type": {
            "displayName": "Type",
            "description": "Whether the profile is stepped (0) or linear (1). Stepped is 'step first'. Stepped is the default.",
            "type": "integer",
            "enum": [ "Stepped", "Linear" ]
          },

          "inter": {
            "displayName": "",
            "description": "The interpolation time (in milliseconds) is the time period used to compute a new value for the profile, interpolating between two profile points.  If set to 0 then no interpolation is performed. Applies to control values.",
            "type": "number"
          }
        }
      },

      "controlProfile": {
        "displayName": {
          "en-US": "Lucid Analogue Output Control Profile"
        },
        "parentTypes": [ "point" ],
        "minObjects": 0,
        "maxObjects": 5,
        "totalObjects": 5,

        "configFields": {

          "parent": {
            "displayName": "Parent Point",
            "description": "Belong to analogue output or binary points only.",
            "type": "integer",
            "required": true
          },

          "parentType": {
            "displayName": "Parent Type",
            "description": "Parent type of the point.",
            "type": "string",
            "required": true
          },

          "num": {
            "displayName": "Point Number",
            "description": "Point number (1-based with allowable numbers defined in the min/max/totalObjects).",
            "type": "integer",
            "min": 1,
            "max": 65535,
            "required": true
          },

          "name": {
            "displayName": "Profile Name",
            "description": "The name is optional.",
            "type": "string",
            "maxLength": 64
          },

          "mon": {
            "displayName": "Monday",
            "description": "Control Profile reference. If days are omitted, then they are assumed to be reverting to the fixed limit threshold value above.",
            "type": "integer"
          },
          "tue": {
            "displayName": "Tuesday",
            "description": "Control Profile reference.",
            "type": "integer"
          },
          "wed": {
            "displayName": "Wednesday",
            "description": "Control Profile reference.",
            "type": "integer"
          },
          "thu": {
            "displayName": "Thursday",
            "description": "Control Profile reference.",
            "type": "integer"
          },
          "fri": {
            "displayName": "Friday",
            "description": "Control Profile reference.",
            "type": "integer"
          },
          "sat": {
            "displayName": "Saturday",
            "description": "Control Profile reference.",
            "type": "integer"
          },
          "sun": {
            "displayName": "Sunday",
            "description": "Control Profile reference.",
            "type": "integer"
          }
        }
      },

      "incidentLog": {
        "displayName": {
          "en-US": "Lucid Triggered Incident Logging"
        },
        "parentTypes": [ "point", "extPoint" ],
        "minObjects": 0,
        "maxObjects": 5,
        "totalObjects": 5,
        "comment": "Defines a sampling store for a point. Optionally triggered by a point. This defines parameters that are used by a Field Device to create additional logs entries as a result of an incident. To meet this requirement, the Field Device needs to be collecting the additional logging values. Triggering is either by the time or the date or by the trigger point value matches its trigger state.",

        "configFields": {

          "parent": {
            "displayName": "Parent Point Index",
            "description": "Parent point index.",
            "type": "integer",
            "required": true
          },

          "parentType": {
            "displayName": "Parent Point Type",
            "description": "Parent type of the point. Must be a valid point type suitable for storage (ai, bi, ao, bo, c, x).",
            "type": "string",
            "comment": "Device can restrict types available",
            "enum": [
              "ai",
              "bi",
              "ao",
              "bo",
              "c",
              "x"
            ],
            "required": true
          },

          "num": {
            "displayName": "Store Number",
            "description": " Store number (1-based with allowable numbers defined in the min/max/totalObjects).",
            "type": "integer",
            "min": 1,
            "max": 65535,
            "required": true
          },

          "triggerPoint": {
            "displayName": "Trigger Point Number",
            "description": "Number of point causing this log to be delivered.",
            "type": "integer"
          },

          "triggerType": {
            "displayName": "Trigger Point Type",
            "description": "Type of the point causing this log to execute. Must be a valid point type suitable for trigger.",
            "type": "string",
            "comment": "Device can restrict types available.",
            "enum": [
              "ai",
              "bi",
              "ao",
              "bo",
              "c"
            ]
          },

          "triggerMask": {
            "displayName": "Trigger State Mask",
            "description": "Trigger occurs when point is in a state matching this bit mask. Binary inputs match by value. Analogues and counters match by alarm limit number, where the limit numbers correspond to bit numbers.",
            "type": "integer"
          },

          "triggerStart": {
            "displayName": "Start",
            "description": "The time (relative to the start of the incident) when logging is to begin (in milliseconds). Negative values mean the log starts before the trigger time.",
            "type": "integer"
          },

          "triggerLength": {
            "displayName": "Length",
            "description": "The length of time (in milliseconds) to continue logging the point after the incident.",
            "type": "integer"
          },

          "logRate": {
            "displayName": "Log Rate",
            "description": "The rate to be used (in milliseconds) to log the point.",
            "type": "integer",
            "required": true
          },

          "logOffset": {
            "displayName": "Log Offset",
            "description": "Offset time from the start of the week that the log is synchronised from (Monday, 00:00:00). Measured in seconds.  If 0, then log is offset from the last midnight.",
            "type": "integer"
          }

        }
      }
    }
  }
}